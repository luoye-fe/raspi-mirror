<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>树莓派</title>
	<!-- <meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"/> -->
	<link type="image/x-icon" rel="shortcut icon" href="https://luoyefe.com/favicon.ico">
	<script>
	var _hmt = _hmt || [];
	(function() {
	  var hm = document.createElement("script");
	  hm.src = "https://hm.baidu.com/hm.js?7d310e6e51093b9c293f9fbcb9ad0ad1";
	  var s = document.getElementsByTagName("script")[0]; 
	  s.parentNode.insertBefore(hm, s);
	})();
	</script>
	<link rel="stylesheet" href="https://h5tq.moji.com/tianqi/assets/5bdfa38e3a845f79/styles/reset.css" charset="utf-8">
	<link rel="stylesheet" href="https://h5tq.moji.com/tianqi/assets/5bdfa38e3a845f79/styles/index.css"  charset="utf-8">
	<link rel="stylesheet" href="https://h5tq.moji.com/tianqi/assets/5bdfa38e3a845f79/styles/chanle.css" charset="utf-8">
	<style type="text/css">
		html,body {
			background: #000;
			position: relative;
		}
		body {
			padding: 16px;
		}
		.top {
			display: flex;
			justify-content: space-between;
		}
		.date {
			color: #fff;
			text-align: right;
			font-size: 20px;
			line-height: 34px;
			font-style: normal;
			display: flex;
			flex-direction: column;
			justify-content: flex-end;
		}

		.time {
			font-size: 88px;
		}

		.time span:last-child {
			font-size: 38px;
		}

		.middle {
			position: fixed;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			/*margin: 0 auto;*/
			/*display: none;*/
		}

		.bottom {
			position: fixed;
			bottom: 0;
			left: 50%;
			transform: translateX(-50%);
			width: 100%;
			display: flex;
			justify-content: center;
			align-items: center;
		}
		.forecast {
			width: 755px;
		}

		.clock {
		    position: absolute;
		    opacity: 1;
		}

		.fill .clock {
		    left: 50%;
		    top: 50%;
		}

		.centre {
		    position: absolute;
		    top: 50%;
		    left: 50%;
		    width: 0;
		    height: 0;
		}

		.expand {
		    position: absolute;
		    top: 0;
		    left: 0;
		    transform: translate(-50%, -50%);
		}

		.anchor {
		    position: absolute;
		    top: 0;
		    left: 0;
		    width: 0;
		    height: 0;
		}

		.element {
		    position: absolute;
		    top: 0;
		    left: 0;
		}

		.round {
		    border-radius: 296px;
		}

		.circle-1 {
		    background: white;
		    width: 12px;
		    height: 12px;
		}

		.circle-2 {
		    background: #FA9F22;
		    width: 8px;
		    height: 8px;
		}

		.circle-3 {
		    background: black;
		    width: 4px;
		    height: 4px;
		}

		.second {
		    transform: rotate(180deg);
		}

		.minute {
		    transform: rotate(54deg);
		}

		.second-hand {
		    width: 2px;
		    height: 164px;
		    background: #FA9F22;
		    transform: translate(-50%,-100%) translateY(24px);
		}

		.hour {
		    transform: rotate(304.5deg);
		}

		.thin-hand {
		    width: 4px;
		    height: 50px;
		    background: white;
		    transform: translate(-50%,-100%);
		}

		.fat-hand {
		    width: 10px;
		    height: 57px;
		    border-radius: 10px;
		    background: white;
		    transform: translate(-50%,-100%) translateY(-18px);
		}

		.minute-hand {
		    height: 112px;
		}

		.hour-text {
		    position: absolute;
		    font: 40px Hei, Helvetica, Arial, sans-serif;
		    color: white;
		    transform: translate(-50%,-50%);
		}

		.hour-10 {
		    padding-left: 0.4ex;
		}
		.hour-11 {
		    padding-left: 0.25ex;
		}

		.minute-text {
		    position: absolute;
		    font: 12px Avenir Next, Helvetica, Arial, sans-serif;
		    color: white;
		    transform: translate(-50%,-50%);
		}

		.minute-line {
		    background: white;
		    width: 1px;
		    height: 9px;
		    transform: translate(-50%,-100%) translateY(-131px);
		    opacity: 0.34;
		}
		.btn {
			position: fixed;
			bottom: 5px;
			left: 10px;
			font-size: 12px;
			color: rgba(255,255,255,0.2);
			cursor: pointer;
			transition: all ease 0.3;
		}
		.btn:hover{
			color: rgba(255,255,255,0.8);
		}
	</style>
</head>
<body>
	<div class="top">
		<div class="weather"></div>
		<div class="date">
			<div class="time"></div>
			<div class="calendar"></div>
		</div>
	</div>
	<div class="middle">
		<div class="fill">
			<div class="reference"></div>
			<div class="clock" id="utility-clock">
				<div class="centre">
					<div class="dynamic"></div>
					<div class="expand round circle-1"></div>
					<div class="anchor hour">
						<div class="element thin-hand"></div>
						<div class="element fat-hand"></div>
					</div>
					<div class="anchor minute">
						<div class="element thin-hand"></div>
						<div class="element fat-hand minute-hand"></div>
					</div>
					<div class="anchor second">
						<div class="element second-hand"></div>
					</div>
					<div class="expand round circle-2"></div>
					<div class="expand round circle-3"></div>
				</div>
			</div>
		</div>
	</div>
	<div class="bottom">
		<div class="forecast clearfix"></div>
	</div>

	<div class="btn">设置</div>
	<script src="https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"></script>
	<script src="https://cdn.bootcss.com/socket.io/2.0.3/socket.io.js"></script>

	<script src="https://cdn.bootcss.com/layer/3.1.0/layer.js"></script>

	<script type="text/javascript">
		(function() {
			
			$('.btn').on('click', setWeather)

			const socket = io('/');

			socket.on('initWeather', initWeather);
			socket.on('initCalendar', initCalendar);

			initWeather();
			initCalendar();
			initTime();
			initClock();

			// 设置天气地址
			function setWeather() {
				layer.prompt({
					title: '请填入所在地墨迹天气地址（http://tianqi.moji.com/weather/china/zhejiang/hangzhou）',
					closeBtn: 0,
					shadeClose: false,
					move: false
				}, function(pass, index){
					localStorage.setItem('weatherUrl', pass);
				  	layer.close(index);
				  	initWeather();
				});
			}

			// 初始化天气
			function initWeather() {
				var weatherUrl = localStorage.getItem('weatherUrl') || 'http://tianqi.moji.com/weather/china/zhejiang/hangzhou';
				$.get('/api/weather', {
						weatherUrl
					})
					.then(res => {
						if (res.error) return layer.open({content: '天气地址有误，点击右下角重新设置'});
						$('.weather').html(res.a);
						$('.forecast').html(res.b);
					})
			}

			// 初始化日历
			function initCalendar() {
				$.ajax('/api/calendar')
					.then(res => {
						$('.calendar').html(
							`
							<p style="font-size: 30px;line-height: 52px;">${res.a} ${res.b}</p>
							<p>${res.c}</p>
							<p>${res.d}</p>
							`);
					})
			}

			// 初始化时间
			function initTime() {
				function animate() {
					var now = new Date();
					$('.time').html(
						`
						<span>${now.getHours()}</span>
						<span>:</span>
						<span>${now.getMinutes()}</span>
						<span>${String(new Date().getSeconds()).length === 1 ? ('0' + now.getSeconds()) : now.getSeconds()}</span>
						`);
					requestAnimationFrame(animate)
				}
				animate()
			}

			// 初始化时钟
			var clock = document.querySelector('#utility-clock')
			if (clock.parentNode.classList.contains('fill')) autoResize(clock, 295 + 100)
			function initClock() {
				var container = document.querySelector('#utility-clock')
			    var dynamic = container.querySelector('.dynamic')
			    var hourElement = container.querySelector('.hour')
			    var minuteElement = container.querySelector('.minute')
			    var secondElement = container.querySelector('.second')
			    var minute = function(n) {
			        return n % 5 == 0 ? minuteText(n) : minuteLine(n)
			    }
			    var minuteText = function(n) {
			        var element = document.createElement('div')
			        element.className = 'minute-text'
			        element.innerHTML = (n < 10 ? '0' : '') + n
			        position(element, n / 60, 135)
			        dynamic.appendChild(element)
			    }
			    var minuteLine = function(n) {
			        var anchor = document.createElement('div')
			        anchor.className = 'anchor'
			        var element = document.createElement('div')
			        element.className = 'element minute-line'
			        rotate(anchor, n)
			        anchor.appendChild(element)
			        dynamic.appendChild(anchor)
			    }
			    var hour = function(n) {
			        var element = document.createElement('div')
			        element.className = 'hour-text hour-' + n
			        element.innerHTML = n
			        position(element, n / 12, 105)
			        dynamic.appendChild(element)
			    }
			    var position = function(element, phase, r) {
			        var theta = phase * 2 * Math.PI
			        element.style.top = (-r * Math.cos(theta)).toFixed(1) + 'px'
			        element.style.left = (r * Math.sin(theta)).toFixed(1) + 'px'
			    }
			    var rotate = function(element, second) {
			        element.style.transform = element.style.webkitTransform = 'rotate(' + (second * 6) + 'deg)'
			    }
			    var animate = function() {
			        var now = new Date()
			        var time = now.getHours() * 3600 +
			                    now.getMinutes() * 60 +
			                    now.getSeconds() * 1 +
			                    now.getMilliseconds() / 1000
			        rotate(secondElement, time)
			        rotate(minuteElement, time / 60)
			        rotate(hourElement, time / 60 / 12)
			        requestAnimationFrame(animate)
			    }
			    for (var i = 1; i <= 60; i ++) minute(i)
			    for (var i = 1; i <= 12; i ++) hour(i)
			    animate()
			}

			function autoResize(element, nativeSize) {
			    var update = function() {
			        var scale = Math.min(600, 600) / nativeSize
			        element.style.transform = element.style.webkitTransform = 'scale(' + scale.toFixed(3) + ')'
			    }
			    update()
			    window.addEventListener('resize', update)
			}
		})()
	</script>
</body>
</html>